name: deployment-run

on: [pull_request, workflow_dispatch]


jobs:
  Deploy-And-Destroy:
    runs-on: ubuntu-latest
    permissions:
        contents: 'read'
        id-token: 'write'
    steps:
      - name: Setup Terraform
        run: |
          wget https://releases.hashicorp.com/terraform/0.12.24/terraform_0.12.24_linux_amd64.zip
          unzip terraform_0.12.24_linux_amd64.zip
          sudo mv terraform /usr/bin/
          terraform version
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Sleep for 10 seconds
        run: sleep 10s
        shell: bash
      - name: Init
        env:
          TF_VAR_ssh_access_key: ${{ secrets.TERRAFORM_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run:  cd terraform && terraform init -var=""
      - name: Plan
        env:
          TF_VAR_ssh_access_key: ${{ secrets.TERRAFORM_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run:  cd terraform && terraform plan
      - name: Apply
        env:
          TF_VAR_ssh_access_key: ${{ secrets.TERRAFORM_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: cd terraform && terraform apply -auto-approve
      - uses: trstringer/manual-approval@v1
        with:
          secret: ${{ secrets.TOKEN }}
          approvers: Aleryp
      - name: Sleep for 10 seconds
        run: sleep 10s
        shell: bash
      - name: Destroy
        if: always()
        env:
          TF_VAR_ssh_access_key: ${{ secrets.TERRAFORM_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: cd terraform && terraform destroy -auto-approve
